(1) #include <stdio.h>

int main() {
    int n, i, first_largest, second_largest;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter the elements of the array: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    first_largest = arr[0];
    second_largest = arr[1];
    if (second_largest > first_largest) {
        int temp = first_largest;
        first_largest = second_largest;
        second_largest = temp;
    }
    for (i = 2; i < n; i++) {
        if (arr[i] > first_largest) {
            second_largest = first_largest;
            first_largest = arr[i];
        } else if (arr[i] > second_largest && arr[i] != first_largest) {
            second_largest = arr[i];
        }
    }
    printf("The FIRST LARGEST = %d\n", first_largest);
    printf("THE SECOND LARGEST = %d\n", second_largest);
    return 0;
}



(2)#include <stdio.h>

int main() {
    int n, i, j, temp, second_largest, second_smallest;
    float average, sum = 0.0;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter the elements of the array: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    for (i = 0; i < n-1; i++) {
        for (j = i+1; j < n; j++) {
            if (arr[i] < arr[j]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
    second_largest = arr[1];
    second_smallest = arr[n-2];
    for (i = 0; i < n; i++) {
        sum += arr[i];
    }
    average = (second_largest + second_smallest) / 2.0;
    for (i = 0; i < n; i++) {
        if (arr[i] == average) {
            printf("The average of the second largest and smallest element, %0.2f, is present in the array.\n", average);
            return 0;
        }
    }
    printf("The average of the second largest and smallest element, %0.2f, is not present in the array.\n", average);
    return 0;
}


(3)#include <stdio.h>

int main() {
    int n, i, min_element, max_difference = 0;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter the elements of the array: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    min_element = arr[0];
    for (i = 1; i < n; i++) {
        if (arr[i] < min_element) {
            min_element = arr[i];
        } else {
            int difference = arr[i] - min_element;
            if (difference > max_difference) {
                max_difference = difference;
            }
        }
    }
    printf("Maximum difference is %d\n", max_difference);
    return 0;
}



(4)#include <stdio.h>

int main() {
    int n, i, j, k;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter the elements of the array: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    for (i = 0; i < n; i++) {
        for (j = i+1; j < n;) {
            if (arr[j] == arr[i]) {
                for (k = j; k < n; k++) {
                    arr[k] = arr[k+1];
                }
                n--;
            } else {
                j++;
            }
        }
    }
    printf("Resultant Array after removing duplicates: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    return 0;
}

(5)
(5) #include <stdio.h>

int main() {
    int n, i, j = 0, k = 0;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    int arr[n], odd[n], even[n];
    printf("Enter the elements of the array: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
        if (arr[i] % 2 == 0) {
            even[j] = arr[i];
            j++;
        } else {
            odd[k] = arr[i];
            k++;
        }
    }
    printf("Odd elements of the array: ");
    for (i = 0; i < k; i++) {
        printf("%d ", odd[i]);
    }
    printf("\nEven elements of the array: ");
    for (i = 0; i < j; i++) {
        printf("%d ", even[i]);
    }
    printf("\n");
    return 0;
}


(6)#include <stdio.h>

int main() {
    int n, i, j, flag = 1;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    int arr[n], rev[n];
    printf("Enter the elements of the array: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
        rev[n-i-1] = arr[i];
    }
    printf("Reversed array: ");
    for (i = 0; i < n; i++) {
        printf("%d ", rev[i]);
        if (rev[i] != arr[i]) {
            flag = 0;
        }
    }
    if (flag == 1) {
        printf("\nThe array is a palindrome.");
    } else {
        printf("\nThe array is not a palindrome.");
    }
    printf("\n");
    return 0;
}


(7)#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX_SIZE 100

int main() {
    int arr[MAX_SIZE], n, i, j, temp;
    printf("Enter the value of N: ");
    scanf("%d", &n);
    printf("Enter the numbers:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    // Sort the array in descending order
    for (i = 0; i < n; i++) {
        for (j = i + 1; j < n; j++) {
            if (arr[i] < arr[j]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
    printf("The numbers arranged in descending order are given below:\n");
    for (i = 0; i < n; i++) {
        printf("%d\n", arr[i]);
    }
    return 0;
}


(8) #include <stdio.h>

int minJumps(int arr[], int n) {
    if (n <= 1) {
        return 0;
    }

    int steps = arr[0];
    int maxReach = arr[0];
    int jumps = 1;

    for (int i = 1; i < n; i++) {
        if (i == n - 1) {
            return jumps;
        }

        maxReach = (maxReach > i + arr[i]) ? maxReach : i + arr[i];

        steps--;

        if (steps == 0) {
            jumps++;

            if (i >= maxReach) {
                return -1;
            }

            steps = maxReach - i;
        }
    }

    return -1;
}

int main() {
    int arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Minimum number of jumps required to reach the end of the array: %d\n", minJumps(arr, n));

    int arr2[] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
    int n2 = sizeof(arr2) / sizeof(arr2[0]);

    printf("Minimum number of jumps required to reach the end of the array: %d\n", minJumps(arr2, n2));

    return 0;
}

(9)#include <stdio.h>

int main() {
    int arr[] = {12, 56, 34, 78, 100};
    int n = sizeof(arr) / sizeof(arr[0]);
    int max = arr[0];
    
    for (int i = 1; i < n; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    
    printf("The largest element in the array is: %d\n", max);
    
    return 0;
}
